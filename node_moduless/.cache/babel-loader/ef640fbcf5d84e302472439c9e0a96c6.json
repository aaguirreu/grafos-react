{"ast":null,"code":"var Matriz = [];\nvar Index = [];\nvar MatrizAdy = [];\nmodule.exports = {\n  Matriz: function (Vertices, Aristas) {\n    Index = [];\n    Matriz = [];\n\n    for (let i = 0; i < Vertices.length; i++) {\n      Index += `${i},`;\n    } //console.log(Index)\n\n\n    Index = Index.split(\",\");\n    Index.pop();\n    console.log(`  | ${Index}`);\n\n    for (let i = 0; i < Vertices.length; i++) {\n      Matriz.push(Index);\n    }\n\n    this.mostrarMatriz(Vertices, Aristas);\n  },\n  mostrarMatriz: function (Vertices, Aristas) {\n    let columnas;\n\n    for (let i = 0; i < Vertices.length; i++) {\n      console.log(`${i} | ${Index}`);\n    } //alert(Index)\n\n  },\n  matrizAdyacencia: function (Vertices, Aristas) {},\n  tipoGrafo: function (Vertices, Aristas) {\n    for (let i = 0; i < Aristas.length; i++) {\n      //console.log(`from ${Aristas[i].from} to ${Aristas[i].to}`)\n      //console.log((Aristas[i].sentido))\n      var aux = 0;\n\n      if (Aristas[i].sentido !== 'Simple') {\n        console.log(\"Es dirigido\");\n        aux = 1;\n      } else {}\n\n      if (aux === 1) {\n        return;\n      }\n    }\n\n    console.log(\"Es Simple\");\n  }\n};","map":{"version":3,"sources":["C:/Users/thesn/OneDrive - utem.cl/Escritorio/Universidad/6to Semestre/Graphs/grafos-react/src/functions.js"],"names":["Matriz","Index","MatrizAdy","module","exports","Vertices","Aristas","i","length","split","pop","console","log","push","mostrarMatriz","columnas","matrizAdyacencia","tipoGrafo","aux","sentido"],"mappings":"AAAA,IAAIA,MAAM,GAAG,EAAb;AACA,IAAIC,KAAK,GAAG,EAAZ;AACA,IAAIC,SAAS,GAAG,EAAhB;AACAC,MAAM,CAACC,OAAP,GAAiB;AACbJ,EAAAA,MAAM,EAAE,UAAUK,QAAV,EAAoBC,OAApB,EAA6B;AACjCL,IAAAA,KAAK,GAAG,EAAR;AACAD,IAAAA,MAAM,GAAG,EAAT;;AACA,SAAK,IAAIO,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCN,MAAAA,KAAK,IAAK,GAAEM,CAAE,GAAd;AACH,KALgC,CAMjC;;;AACAN,IAAAA,KAAK,GAAGA,KAAK,CAACQ,KAAN,CAAY,GAAZ,CAAR;AACAR,IAAAA,KAAK,CAACS,GAAN;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAa,OAAMX,KAAM,EAAzB;;AACA,SAAK,IAAIM,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCP,MAAAA,MAAM,CAACa,IAAP,CAAYZ,KAAZ;AACH;;AACD,SAAKa,aAAL,CAAmBT,QAAnB,EAA6BC,OAA7B;AACD,GAfU;AAiBbQ,EAAAA,aAAa,EAAE,UAAUT,QAAV,EAAoBC,OAApB,EAA6B;AACxC,QAAIS,QAAJ;;AACA,SAAK,IAAIR,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,QAAQ,CAACG,MAA7B,EAAqCD,CAAC,EAAtC,EAA0C;AACtCI,MAAAA,OAAO,CAACC,GAAR,CAAa,GAAEL,CAAE,MAAKN,KAAM,EAA5B;AACH,KAJuC,CAKxC;;AACD,GAvBU;AAyBbe,EAAAA,gBAAgB,EAAE,UAAUX,QAAV,EAAoBC,OAApB,EAA6B,CAE9C,CA3BY;AA6BbW,EAAAA,SAAS,EAAE,UAAUZ,QAAV,EAAoBC,OAApB,EAA6B;AACpC,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGD,OAAO,CAACE,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC;AACA;AACA,UAAIW,GAAG,GAAG,CAAV;;AACA,UAAGZ,OAAO,CAACC,CAAD,CAAP,CAAWY,OAAX,KAAuB,QAA1B,EAAoC;AAChCR,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAM,QAAAA,GAAG,GAAG,CAAN;AACH,OAHD,MAGO,CACN;;AAAC,UAAIA,GAAG,KAAK,CAAZ,EAAe;AACb;AACH;AACJ;;AACDP,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH;AA3CY,CAAjB","sourcesContent":["var Matriz = []\r\nvar Index = []\r\nvar MatrizAdy = []\r\nmodule.exports = {\r\n    Matriz: function (Vertices, Aristas) {\r\n        Index = []\r\n        Matriz = []\r\n        for (let i = 0; i < Vertices.length; i++) {\r\n            Index += `${i},`\r\n        }\r\n        //console.log(Index)\r\n        Index = Index.split(\",\")\r\n        Index.pop()\r\n        console.log(`  | ${Index}`)\r\n        for (let i = 0; i < Vertices.length; i++) {\r\n            Matriz.push(Index)\r\n        }\r\n        this.mostrarMatriz(Vertices, Aristas)\r\n      },\r\n      \r\n    mostrarMatriz: function (Vertices, Aristas) {\r\n        let columnas\r\n        for (let i = 0; i < Vertices.length; i++) {\r\n            console.log(`${i} | ${Index}`)\r\n        }\r\n        //alert(Index)\r\n      },\r\n\r\n    matrizAdyacencia: function (Vertices, Aristas) {\r\n\r\n    },\r\n\r\n    tipoGrafo: function (Vertices, Aristas) {\r\n        for (let i = 0; i < Aristas.length; i++) {\r\n            //console.log(`from ${Aristas[i].from} to ${Aristas[i].to}`)\r\n            //console.log((Aristas[i].sentido))\r\n            var aux = 0\r\n            if(Aristas[i].sentido !== 'Simple') {\r\n                console.log(\"Es dirigido\")\r\n                aux = 1\r\n            } else {\r\n            } if (aux === 1) {\r\n                return;\r\n            }\r\n        }\r\n        console.log(\"Es Simple\")\r\n    },\r\n}"]},"metadata":{},"sourceType":"module"}