{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesn\\\\OneDrive - utem.cl\\\\Escritorio\\\\Universidad\\\\6to Semestre\\\\Graphs\\\\App\\\\grafos-react\\\\src\\\\index.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css'; //import App from './App';\n\nimport reportWebVitals from './reportWebVitals';\nimport Graph from \"react-graph-vis\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  layout: {\n    hierarchical: false\n  },\n  edges: {\n    color: \"#000000\"\n  }\n};\n\nfunction randomColor() {\n  const red = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  const green = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  const blue = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  return `#${red}${green}${blue}`;\n}\n\nconst App = () => {\n  _s();\n\n  const createNode = (x, y) => {\n    const color = randomColor();\n    setState(({\n      graph: {\n        nodes,\n        edges\n      },\n      counter,\n      ...rest\n    }) => {\n      const id = counter + 1;\n      const from = Math.floor(Math.random() * (counter - 1)) + 1;\n      return {\n        graph: {\n          nodes: [...nodes, {\n            id,\n            label: `Node ${id}`,\n            color,\n            x,\n            y\n          }],\n          edges: [...edges, {\n            from,\n            to: id\n          }]\n        },\n        counter: id,\n        ...rest\n      };\n    });\n  };\n\n  const [state, setState] = useState({\n    counter: 5,\n    graph: {\n      nodes: [{\n        id: 1,\n        label: \"Node 1\",\n        color: \"#e04141\"\n      }, {\n        id: 2,\n        label: \"Node 2\",\n        color: \"#e09c41\"\n      }, {\n        id: 3,\n        label: \"Node 3\",\n        color: \"#e0df41\"\n      }, {\n        id: 4,\n        label: \"Node 4\",\n        color: \"#7be041\"\n      }, {\n        id: 5,\n        label: \"Node 5\",\n        color: \"#41e0c9\"\n      }],\n      edges: [{\n        from: 1,\n        to: 2\n      }, {\n        from: 1,\n        to: 3\n      }, {\n        from: 2,\n        to: 4\n      }, {\n        from: 2,\n        to: 5\n      }]\n    },\n    events: {\n      select: ({\n        nodes,\n        edges\n      }) => {\n        console.log(\"Selected nodes:\");\n        console.log(nodes);\n        console.log(\"Selected edges:\");\n        console.log(edges);\n        alert(\"Selected node: \" + nodes);\n      },\n      doubleClick: ({\n        pointer: {\n          canvas\n        }\n      }) => {\n        createNode(canvas.x, canvas.y);\n      }\n    }\n  });\n  const {\n    graph,\n    events\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"React graph vis\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com/crubier/react-graph-vis\",\n        children: \"Github\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), \" -\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://www.npmjs.com/package/react-graph-vis\",\n        children: \"NPM\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"https://github.com/crubier/react-graph-vis/tree/master/example/src/index.js\",\n        children: \"Source of this page\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 10\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"A React component to display beautiful network graphs using vis.js\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Make sure to visit \", /*#__PURE__*/_jsxDEV(\"a\", {\n        href: \"http://visjs.org\",\n        children: \"visjs.org\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 29\n      }, this), \" for more info.\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"This package allows to render network graphs using vis.js.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Rendered graphs are scrollable, zoomable, retina ready, dynamic\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"In this example, we manage state with react: on double click we create a new node, and on select we display an alert.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Graph, {\n      graph: graph,\n      options: options,\n      events: events,\n      style: {\n        height: \"640px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"JpQl0q6acUSk5/uA9MyH8sconuA=\");\n\n_c = App;\nReactDOM.render( /*#__PURE__*/_jsxDEV(React.StrictMode, {\n  children: /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 96,\n  columnNumber: 3\n}, this), document.getElementById('root')); // If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n\nreportWebVitals(); //\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/thesn/OneDrive - utem.cl/Escritorio/Universidad/6to Semestre/Graphs/App/grafos-react/src/index.js"],"names":["React","ReactDOM","reportWebVitals","Graph","options","layout","hierarchical","edges","color","randomColor","red","Math","floor","random","toString","padStart","green","blue","App","createNode","x","y","setState","graph","nodes","counter","rest","id","from","label","to","state","useState","events","select","console","log","alert","doubleClick","pointer","canvas","height","render","document","getElementById"],"mappings":"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","sourcesContent":["import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport Graph from \"react-graph-vis\";\n\nconst options = {\n  layout: {\n    hierarchical: false\n  },\n  edges: {\n    color: \"#000000\"\n  }\n};\n\nfunction randomColor() {\n  const red = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  const green = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  const blue = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  return `#${red}${green}${blue}`;\n}\n\nconst App = () => {\n  const createNode = (x, y) => {\n    const color = randomColor();\n    setState(({ graph: { nodes, edges }, counter, ...rest }) => {\n      const id = counter + 1;\n      const from = Math.floor(Math.random() * (counter - 1)) + 1;\n      return {\n        graph: {\n          nodes: [\n            ...nodes,\n            { id, label: `Node ${id}`, color, x, y }\n          ],\n          edges: [\n            ...edges,\n            { from, to: id }\n          ]\n        },\n        counter: id,\n        ...rest\n      }\n    });\n  }\n  const [state, setState] = useState({\n    counter: 5,\n    graph: {\n      nodes: [\n        { id: 1, label: \"Node 1\", color: \"#e04141\" },\n        { id: 2, label: \"Node 2\", color: \"#e09c41\" },\n        { id: 3, label: \"Node 3\", color: \"#e0df41\" },\n        { id: 4, label: \"Node 4\", color: \"#7be041\" },\n        { id: 5, label: \"Node 5\", color: \"#41e0c9\" }\n      ],\n      edges: [\n        { from: 1, to: 2 },\n        { from: 1, to: 3 },\n        { from: 2, to: 4 },\n        { from: 2, to: 5 }\n      ]\n    },\n    events: {\n      select: ({ nodes, edges }) => {\n        console.log(\"Selected nodes:\");\n        console.log(nodes);\n        console.log(\"Selected edges:\");\n        console.log(edges);\n        alert(\"Selected node: \" + nodes);\n      },\n      doubleClick: ({ pointer: { canvas } }) => {\n        createNode(canvas.x, canvas.y);\n      }\n    }\n  })\n  const { graph, events } = state;\n  return (\n    <div>\n      <h1>React graph vis</h1>\n      <p>\n        <a href=\"https://github.com/crubier/react-graph-vis\">Github</a> -{\" \"}\n        <a href=\"https://www.npmjs.com/package/react-graph-vis\">NPM</a>\n      </p>\n      <p><a href=\"https://github.com/crubier/react-graph-vis/tree/master/example/src/index.js\">Source of this page</a></p>\n      <p>A React component to display beautiful network graphs using vis.js</p>\n      <p>Make sure to visit <a href=\"http://visjs.org\">visjs.org</a> for more info.</p>\n      <p>This package allows to render network graphs using vis.js.</p>\n      <p>Rendered graphs are scrollable, zoomable, retina ready, dynamic</p>\n      <p>In this example, we manage state with react: on double click we create a new node, and on select we display an alert.</p>\n      <Graph graph={graph} options={options} events={events} style={{ height: \"640px\" }} />\n    </div>\n  );\n}\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n\n//\n"]},"metadata":{},"sourceType":"module"}