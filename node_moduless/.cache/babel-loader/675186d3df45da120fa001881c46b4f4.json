{"ast":null,"code":"var Matriz = new Array();\nmodule.exports = {\n  mostrarMatriz: function (Vertices, Aristas) {\n    console.log(Vertices);\n    console.log(Aristas);\n  },\n  tipoGrafo: function (Vertices, Aristas) {\n    for (let i = 0; i < Aristas.length; i++) {\n      //console.log(`from ${Aristas[i].from} to ${Aristas[i].to}`)\n      //console.log((Aristas[i].sentido))\n      var aux = 0;\n\n      if (Aristas[i].sentido != 'Simple') {\n        console.log(\"Es dirigido\");\n        aux = 1;\n      } else {}\n\n      if (aux == 1) {\n        return;\n      }\n    }\n\n    console.log(\"Es Simple\");\n  },\n  conexo: function (Vertices, Aristas) {\n    cont = Vertices.length;\n    vali = true;\n\n    if (Vertices.length == 0 && Aristas.length == 0) {\n      vali = false;\n    }\n\n    for (var i = 0; i < Vertices.length; i++) {\n      for (var j = 0; j < Vertices.length; j++) {\n        if (MatrizAdy[i][j] == 0) {\n          cont--;\n\n          if (cont == 0) {\n            vali = false;\n          }\n        }\n      }\n\n      cont = Vertices.length;\n    }\n\n    if (vali == true) {\n      console.log(\"El grafo es conexo\");\n      return true;\n    } else {\n      console.log(\"El grafo no es conexo\");\n      return false;\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/thesn/OneDrive - utem.cl/Escritorio/Universidad/6to Semestre/Graphs/grafos-react/src/functions.js"],"names":["Matriz","Array","module","exports","mostrarMatriz","Vertices","Aristas","console","log","tipoGrafo","i","length","aux","sentido","conexo","cont","vali","j","MatrizAdy"],"mappings":"AAAA,IAAIA,MAAM,GAAG,IAAIC,KAAJ,EAAb;AAEAC,MAAM,CAACC,OAAP,GAAiB;AACbC,EAAAA,aAAa,EAAE,UAAUC,QAAV,EAAoBC,OAApB,EAA6B;AACxCC,IAAAA,OAAO,CAACC,GAAR,CAAYH,QAAZ;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAYF,OAAZ;AACD,GAJU;AAMbG,EAAAA,SAAS,EAAE,UAAUJ,QAAV,EAAoBC,OAApB,EAA6B;AACpC,SAAK,IAAII,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGJ,OAAO,CAACK,MAA5B,EAAoCD,CAAC,EAArC,EAAyC;AACrC;AACA;AACA,UAAIE,GAAG,GAAG,CAAV;;AACA,UAAGN,OAAO,CAACI,CAAD,CAAP,CAAWG,OAAX,IAAsB,QAAzB,EAAmC;AAC/BN,QAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACAI,QAAAA,GAAG,GAAG,CAAN;AACH,OAHD,MAGO,CACN;;AAAC,UAAIA,GAAG,IAAI,CAAX,EAAc;AACZ;AACH;AACJ;;AACDL,IAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ;AACH,GApBY;AAsBbM,EAAAA,MAAM,EAAE,UAAUT,QAAV,EAAoBC,OAApB,EAA6B;AACjCS,IAAAA,IAAI,GAACV,QAAQ,CAACM,MAAd;AACAK,IAAAA,IAAI,GAAC,IAAL;;AACA,QAAGX,QAAQ,CAACM,MAAT,IAAmB,CAAnB,IAAwBL,OAAO,CAACK,MAAR,IAAiB,CAA5C,EAA8C;AAC5CK,MAAAA,IAAI,GAAC,KAAL;AACD;;AACD,SAAI,IAAIN,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACL,QAAQ,CAACM,MAAvB,EAA8BD,CAAC,EAA/B,EAAkC;AAChC,WAAI,IAAIO,CAAC,GAAC,CAAV,EAAYA,CAAC,GAACZ,QAAQ,CAACM,MAAvB,EAA8BM,CAAC,EAA/B,EAAkC;AAChC,YAAGC,SAAS,CAACR,CAAD,CAAT,CAAaO,CAAb,KAAiB,CAApB,EAAsB;AACpBF,UAAAA,IAAI;;AACJ,cAAGA,IAAI,IAAE,CAAT,EAAW;AACTC,YAAAA,IAAI,GAAC,KAAL;AACD;AACF;AACF;;AACDD,MAAAA,IAAI,GAACV,QAAQ,CAACM,MAAd;AACD;;AACD,QAAGK,IAAI,IAAE,IAAT,EAAc;AACZT,MAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ;AACA,aAAO,IAAP;AACD,KAHD,MAGK;AACHD,MAAAA,OAAO,CAACC,GAAR,CAAY,uBAAZ;AACA,aAAO,KAAP;AACD;AACJ;AA9CY,CAAjB","sourcesContent":["var Matriz = new Array()\r\n\r\nmodule.exports = {\r\n    mostrarMatriz: function (Vertices, Aristas) {\r\n        console.log(Vertices)\r\n        console.log(Aristas)\r\n      },\r\n\r\n    tipoGrafo: function (Vertices, Aristas) {\r\n        for (let i = 0; i < Aristas.length; i++) {\r\n            //console.log(`from ${Aristas[i].from} to ${Aristas[i].to}`)\r\n            //console.log((Aristas[i].sentido))\r\n            var aux = 0\r\n            if(Aristas[i].sentido != 'Simple') {\r\n                console.log(\"Es dirigido\")\r\n                aux = 1\r\n            } else {\r\n            } if (aux == 1) {\r\n                return;\r\n            }\r\n        }\r\n        console.log(\"Es Simple\")\r\n    },\r\n\r\n    conexo: function (Vertices, Aristas) {\r\n        cont=Vertices.length;\r\n        vali=true;\r\n        if(Vertices.length == 0 && Aristas.length== 0){\r\n          vali=false;\r\n        }\r\n        for(var i=0;i<Vertices.length;i++){\r\n          for(var j=0;j<Vertices.length;j++){\r\n            if(MatrizAdy[i][j]==0){\r\n              cont--;\r\n              if(cont==0){\r\n                vali=false;\r\n              }\r\n            }\r\n          }\r\n          cont=Vertices.length;\r\n        }\r\n        if(vali==true){\r\n          console.log(\"El grafo es conexo\");\r\n          return true;\r\n        }else{\r\n          console.log(\"El grafo no es conexo\");\r\n          return false;\r\n        }\r\n    },\r\n}"]},"metadata":{},"sourceType":"module"}