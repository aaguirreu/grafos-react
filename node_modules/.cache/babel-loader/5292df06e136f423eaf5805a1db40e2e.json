{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thesn\\\\OneDrive - utem.cl\\\\Escritorio\\\\Universidad\\\\6to Semestre\\\\Graphs\\\\grafos-react\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport Graph from \"react-graph-vis\";\nimport React, { useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst options = {\n  layout: {\n    hierarchical: false\n  },\n  edges: {\n    color: \"#000000\"\n  }\n};\n\nfunction randomColor() {\n  const red = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  const green = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  const blue = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  return `#${red}${green}${blue}`;\n}\n\nconst App = () => {\n  _s();\n\n  const createNode = (x, y) => {\n    const color = randomColor();\n    setState(({\n      graph: {\n        nodes,\n        edges\n      },\n      counter,\n      ...rest\n    }) => {\n      const id = counter + 1;\n      const from = Math.floor(Math.random() * (counter - 1)) + 1;\n      return {\n        graph: {\n          nodes: [...nodes, {\n            id,\n            label: `Node ${id}`,\n            color,\n            x,\n            y\n          }],\n          edges: [...edges, {\n            from,\n            to: id\n          }]\n        },\n        counter: id,\n        ...rest\n      };\n    });\n  };\n\n  const [state, setState] = useState({\n    counter: 5,\n    graph: {\n      nodes: [{\n        id: 1,\n        label: \"Node 1\",\n        color: \"#e04141\"\n      }, {\n        id: 2,\n        label: \"Node 2\",\n        color: \"#e09c41\"\n      }, {\n        id: 3,\n        label: \"Node 3\",\n        color: \"#e0df41\"\n      }, {\n        id: 4,\n        label: \"Node 4\",\n        color: \"#7be041\"\n      }, {\n        id: 5,\n        label: \"Node 5\",\n        color: \"#41e0c9\"\n      }],\n      edges: [{\n        from: 1,\n        to: 2\n      }, {\n        from: 1,\n        to: 3\n      }, {\n        from: 2,\n        to: 4\n      }, {\n        from: 2,\n        to: 5\n      }]\n    },\n    events: {\n      select: ({\n        nodes,\n        edges\n      }) => {\n        console.log(\"Selected nodes:\");\n        console.log(nodes);\n        console.log(\"Selected edges:\");\n        console.log(edges);\n        alert(\"Selected node: \" + nodes);\n      },\n      doubleClick: ({\n        pointer: {\n          canvas\n        }\n      }) => {\n        createNode(canvas.x, canvas.y);\n      }\n    }\n  });\n  const {\n    graph,\n    events\n  } = state;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Graph, {\n      graph: graph,\n      options: options,\n      events: events,\n      style: {\n        height: \"640px\"\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(\"header\", {\n        className: \"App-header\",\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: logo,\n          className: \"App-logo\",\n          alt: \"logo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Edit \", /*#__PURE__*/_jsxDEV(\"code\", {\n            children: \"src/App.js\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 16\n          }, this), \" and save to reload.\", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://github.com/crubier/react-graph-vis\",\n            children: \"Github\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 11\n          }, this), \" -\", \" \", /*#__PURE__*/_jsxDEV(\"a\", {\n            href: \"https://www.npmjs.com/package/react-graph-vis\",\n            children: \"NPM\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"a\", {\n          className: \"App-link\",\n          href: \"https://reactjs.org\",\n          target: \"_blank\",\n          rel: \"noopener noreferrer\",\n          children: \"Learn React\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"JpQl0q6acUSk5/uA9MyH8sconuA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/thesn/OneDrive - utem.cl/Escritorio/Universidad/6to Semestre/Graphs/grafos-react/src/App.js"],"names":["Graph","React","useState","options","layout","hierarchical","edges","color","randomColor","red","Math","floor","random","toString","padStart","green","blue","App","createNode","x","y","setState","graph","nodes","counter","rest","id","from","label","to","state","events","select","console","log","alert","doubleClick","pointer","canvas","height","logo"],"mappings":"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","sourcesContent":["import logo from './logo.svg';\nimport './App.css';\nimport Graph from \"react-graph-vis\";\nimport React, { useState } from \"react\";\n\nconst options = {\n  layout: {\n    hierarchical: false\n  },\n  edges: {\n    color: \"#000000\"\n  }\n};\n\nfunction randomColor() {\n  const red = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  const green = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  const blue = Math.floor(Math.random() * 256).toString(16).padStart(2, '0');\n  return `#${red}${green}${blue}`;\n}\n \nconst App = () => {\n  const createNode = (x, y) => {\n    const color = randomColor();\n    setState(({ graph: { nodes, edges }, counter, ...rest }) => {\n      const id = counter + 1;\n      const from = Math.floor(Math.random() * (counter - 1)) + 1;\n      return {\n        graph: {\n          nodes: [\n            ...nodes,\n            { id, label: `Node ${id}`, color, x, y }\n          ],\n          edges: [\n            ...edges,\n            { from, to: id }\n          ]\n        },\n        counter: id,\n        ...rest\n      }\n    });\n  }\n  \n  const [state, setState] = useState({\n    counter: 5,\n    graph: {\n      nodes: [\n        { id: 1, label: \"Node 1\", color: \"#e04141\" },\n        { id: 2, label: \"Node 2\", color: \"#e09c41\" },\n        { id: 3, label: \"Node 3\", color: \"#e0df41\" },\n        { id: 4, label: \"Node 4\", color: \"#7be041\" },\n        { id: 5, label: \"Node 5\", color: \"#41e0c9\" }\n      ],\n      edges: [\n        { from: 1, to: 2 },\n        { from: 1, to: 3 },\n        { from: 2, to: 4 },\n        { from: 2, to: 5 }\n      ]\n    },\n    events: {\n      select: ({ nodes, edges }) => {\n        console.log(\"Selected nodes:\");\n        console.log(nodes);\n        console.log(\"Selected edges:\");\n        console.log(edges);\n        alert(\"Selected node: \" + nodes);\n      },\n      doubleClick: ({ pointer: { canvas } }) => {\n        createNode(canvas.x, canvas.y);\n      }\n    }\n  })\n  const { graph, events } = state;\n  return (\n    <div>\n      <Graph graph={graph} options={options} events={events} style={{ height: \"640px\" }} />\n      <div className=\"App\">\n      <header className=\"App-header\">\n\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <p>\n          Edit <code>src/App.js</code> and save to reload.\n          <a href=\"https://github.com/crubier/react-graph-vis\">Github</a> -{\" \"}\n          <a href=\"https://www.npmjs.com/package/react-graph-vis\">NPM</a>\n        </p>\n        <a\n        \n          className=\"App-link\"\n          href=\"https://reactjs.org\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Learn React\n        </a>\n      </header>\n      \n      </div>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}