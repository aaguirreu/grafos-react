{"ast":null,"code":"var Matriz = new Array();\nvar MatrizAdy = [];\nmodule.exports = {\n  mostrarMatriz: function (Vertices, Aristas) {\n    console.log(Vertices);\n    console.log(Aristas);\n  },\n  tipoGrafo: function (Vertices, Aristas) {\n    for (let i = 0; i < Aristas.length; i++) {\n      //console.log(`from ${Aristas[i].from} to ${Aristas[i].to}`)\n      //console.log((Aristas[i].sentido))\n      var aux = 0;\n\n      if (Aristas[i].sentido != 'Simple') {\n        console.log(\"Es dirigido\");\n        aux = 1;\n      } else {}\n\n      if (aux == 1) {\n        return;\n      }\n    }\n\n    console.log(\"Es Simple\");\n  },\n  MatrizAdyacencia: function (Vertices, Aristas) {\n    for (var i = 0; i < Vertices.length; i++) {\n      MatrizAdy[i] = new Array();\n    }\n\n    for (var i = 0; i < Vertices.length; i++) {\n      for (var j = 0; j < Vertices.length; j++) {\n        MatrizAdy[i][j] = 0;\n      }\n    }\n\n    for (var i = 0; i < Aristas.length; i++) {\n      if (Aristas[i][2] == false) {\n        var aux1 = Aristas[i][0];\n        var aux2 = Aristas[i][1];\n        aux1 = buscarindex(aux1);\n        aux2 = buscarindex(aux2);\n        MatrizAdy[aux1][aux2] += 1;\n        MatrizAdy[aux2][aux1] += 1;\n      } else {\n        var aux1 = Aristas[i][0];\n        var aux2 = Aristas[i][1];\n        aux1 = buscarindex(aux1);\n        aux2 = buscarindex(aux2);\n        MatrizAdy[aux2][aux1] += 1;\n      }\n    }\n  },\n  conexo: function (Vertices, Aristas) {\n    cont = Vertices.length;\n    vali = true;\n\n    if (Vertices.length == 0 && Aristas.length == 0) {\n      vali = false;\n    }\n\n    for (var i = 0; i < Vertices.length; i++) {\n      for (var j = 0; j < Vertices.length; j++) {\n        if (MatrizAdy[i][j] == 0) {\n          cont--;\n\n          if (cont == 0) {\n            vali = false;\n          }\n        }\n      }\n\n      cont = Vertices.length;\n    }\n\n    if (vali == true) {\n      console.log(\"El grafo es conexo\");\n      return true;\n    } else {\n      console.log(\"El grafo no es conexo\");\n      return false;\n    }\n  }\n};","map":{"version":3,"sources":["C:/Users/thesn/OneDrive - utem.cl/Escritorio/Universidad/6to Semestre/Graphs/grafos-react/src/functions.js"],"names":["Matriz","Array","MatrizAdy","module","exports","mostrarMatriz","Vertices","Aristas","console","log","tipoGrafo","i","length","aux","sentido","MatrizAdyacencia","j","aux1","aux2","buscarindex","conexo","cont","vali"],"mappings":"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","sourcesContent":["var Matriz = new Array()\r\nvar MatrizAdy = []\r\n\r\nmodule.exports = {\r\n    mostrarMatriz: function (Vertices, Aristas) {\r\n        console.log(Vertices)\r\n        console.log(Aristas)\r\n      },\r\n\r\n    tipoGrafo: function (Vertices, Aristas) {\r\n        for (let i = 0; i < Aristas.length; i++) {\r\n            //console.log(`from ${Aristas[i].from} to ${Aristas[i].to}`)\r\n            //console.log((Aristas[i].sentido))\r\n            var aux = 0\r\n            if(Aristas[i].sentido != 'Simple') {\r\n                console.log(\"Es dirigido\")\r\n                aux = 1\r\n            } else {\r\n            } if (aux == 1) {\r\n                return;\r\n            }\r\n        }\r\n        console.log(\"Es Simple\")\r\n    },\r\n\r\n    MatrizAdyacencia: function (Vertices, Aristas) {\r\n        for(var i=0; i<Vertices.length; i++) {\r\n            MatrizAdy[i]=new Array();\r\n       } \r\n       for(var i=0; i<Vertices.length; i++) {\r\n         for(var j=0; j<Vertices.length; j++) {\r\n           MatrizAdy[i][j]=0 \r\n         }\r\n       }\r\n       for(var i=0;i<Aristas.length;i++){\r\n         if(Aristas[i][2]==false){  \r\n           var aux1=Aristas[i][0];\r\n           var aux2=Aristas[i][1];\r\n           aux1=buscarindex(aux1);\r\n           aux2=buscarindex(aux2); \r\n           MatrizAdy[aux1][aux2]+=1;\r\n           MatrizAdy[aux2][aux1]+=1;\r\n         }else{\r\n           var aux1=Aristas[i][0];\r\n           var aux2=Aristas[i][1];\r\n           aux1=buscarindex(aux1);\r\n           aux2=buscarindex(aux2); \r\n           MatrizAdy[aux2][aux1]+=1;\r\n         }\r\n       }\r\n    },\r\n\r\n    conexo: function (Vertices, Aristas) {\r\n        cont=Vertices.length;\r\n        vali=true;\r\n        if(Vertices.length == 0 && Aristas.length== 0){\r\n          vali=false;\r\n        }\r\n        for(var i=0;i<Vertices.length;i++){\r\n          for(var j=0;j<Vertices.length;j++){\r\n            if(MatrizAdy[i][j]==0){\r\n              cont--;\r\n              if(cont==0){\r\n                vali=false;\r\n              }\r\n            }\r\n          }\r\n          cont=Vertices.length;\r\n        }\r\n        if(vali==true){\r\n          console.log(\"El grafo es conexo\");\r\n          return true;\r\n        }else{\r\n          console.log(\"El grafo no es conexo\");\r\n          return false;\r\n        }\r\n    },\r\n}"]},"metadata":{},"sourceType":"module"}