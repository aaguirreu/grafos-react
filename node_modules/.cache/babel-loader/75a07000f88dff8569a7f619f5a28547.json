{"ast":null,"code":"var Matriz;\nvar Index;\nvar MatrizAdy;\nvar columnas;\nmodule.exports = {\n  Matriz: function (Vertices, Aristas) {\n    Index = [];\n    Matriz = [];\n\n    for (let i = 0; i < Vertices.length; i++) {\n      Index += `${i + 1} `;\n    } //console.log(Index)\n\n\n    Index = Index.split(\" \");\n    Index.pop();\n\n    for (let i = 0; i < Vertices.length; i++) {\n      Matriz.push(Index);\n    }\n\n    Index = Index.join(\" \");\n    console.log(`| ${Index}`);\n    let valor = document.querySelector(\".filas\");\n    valor.innerHTML = `| ${Index}`;\n    this.mostrarMatriz(Vertices, Aristas);\n  },\n  mostrarMatriz: function (Vertices, Aristas) {\n    let columnas2 = []; // Da valor 0 a cada elemento de la matriz\n\n    for (let i = 0; i < Vertices.length; i++) {\n      for (let j = 0; j < Vertices.length; j++) {\n        Matriz[i][j] = 0;\n      }\n    }\n\n    this.matrizAdyacencia(Vertices, Aristas);\n\n    for (let i = 0; i < Vertices.length; i++) {\n      columnas = [];\n\n      for (let j = 0; j < Vertices.length; j++) {\n        columnas += `${Matriz[i][j]} `;\n      }\n\n      columnas = columnas.split(\" \");\n      columnas.pop();\n      columnas = columnas.join(\" \");\n      columnas2 += `${i + 1} | ${columnas}</p/>`;\n      console.log(`${i + 1} | ${columnas}`);\n    }\n\n    let valor = document.querySelector(\".table\");\n    valor.innerHTML = columnas2; //alert(Index)\n  },\n  matrizAdyacencia: function (Vertices, Aristas) {\n    for (let arista of Aristas) {\n      console.log(arista.from);\n      console.log(arista.to);\n      console.log(Matriz[0][0]);\n    }\n  },\n  tipoGrafo: function (Vertices, Aristas) {\n    for (let i = 0; i < Aristas.length; i++) {\n      //console.log(`from ${Aristas[i].from} to ${Aristas[i].to}`)\n      //console.log((Aristas[i].sentido))\n      var aux = 0;\n\n      if (Aristas[i].sentido !== 'Simple') {\n        console.log(\"Es dirigido\");\n        aux = 1;\n      } else {}\n\n      if (aux === 1) {\n        return;\n      }\n    }\n\n    console.log(\"Es Simple\");\n  }\n};","map":{"version":3,"sources":["C:/Users/thesn/OneDrive - utem.cl/Escritorio/Universidad/6to Semestre/Graphs/grafos-react/src/functions.js"],"names":["Matriz","Index","MatrizAdy","columnas","module","exports","Vertices","Aristas","i","length","split","pop","push","join","console","log","valor","document","querySelector","innerHTML","mostrarMatriz","columnas2","j","matrizAdyacencia","arista","from","to","tipoGrafo","aux","sentido"],"mappings":"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","sourcesContent":["var Matriz\r\nvar Index\r\nvar MatrizAdy \r\nvar columnas \r\nmodule.exports = {\r\n    Matriz: function (Vertices, Aristas) {\r\n        Index = []\r\n        Matriz = []\r\n        for (let i = 0; i < Vertices.length; i++) {\r\n            Index += `${i+1} `\r\n        }\r\n        //console.log(Index)\r\n        Index = Index.split(\" \")\r\n        Index.pop()\r\n        for (let i = 0; i < Vertices.length; i++) {\r\n            Matriz.push(Index)\r\n        }\r\n        Index = Index.join(\" \")\r\n        console.log(`| ${Index}`)\r\n        let valor = document.querySelector(\".filas\")\r\n        valor.innerHTML = `| ${Index}`\r\n        this.mostrarMatriz(Vertices, Aristas)\r\n      },\r\n      \r\n    mostrarMatriz: function (Vertices, Aristas) {\r\n        let columnas2 = []\r\n        // Da valor 0 a cada elemento de la matriz\r\n        for (let i = 0; i < Vertices.length; i++) {\r\n            for (let j = 0; j < Vertices.length; j++) {\r\n                Matriz[i][j] = 0\r\n            }  \r\n        }\r\n        this.matrizAdyacencia(Vertices, Aristas)\r\n        for (let i = 0; i < Vertices.length; i++) {\r\n            columnas = []\r\n            for (let j = 0; j < Vertices.length; j++) {\r\n                columnas += `${Matriz[i][j]} ` \r\n            }\r\n            columnas = columnas.split(\" \") \r\n            columnas.pop()\r\n            columnas = columnas.join(\" \")\r\n            columnas2 += `${i+1} | ${columnas}</p/>`\r\n            console.log(`${i+1} | ${columnas}`)\r\n        }\r\n        let valor = document.querySelector(\".table\")\r\n        valor.innerHTML = columnas2\r\n        //alert(Index)\r\n      },\r\n\r\n    matrizAdyacencia: function (Vertices, Aristas) {\r\n        for(let arista of Aristas) {\r\n            console.log(arista.from)\r\n            console.log(arista.to)\r\n            console.log(Matriz[0][0])\r\n          }\r\n    },\r\n\r\n    tipoGrafo: function (Vertices, Aristas) {\r\n        for (let i = 0; i < Aristas.length; i++) {\r\n            //console.log(`from ${Aristas[i].from} to ${Aristas[i].to}`)\r\n            //console.log((Aristas[i].sentido))\r\n            var aux = 0\r\n            if(Aristas[i].sentido !== 'Simple') {\r\n                console.log(\"Es dirigido\")\r\n                aux = 1\r\n            } else {\r\n            } if (aux === 1) {\r\n                return;\r\n            }\r\n        }\r\n        console.log(\"Es Simple\")\r\n    },\r\n}"]},"metadata":{},"sourceType":"module"}